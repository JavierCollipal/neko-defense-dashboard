#!/usr/bin/env ts-node

import puppeteer from 'puppeteer';

async function openDashboard() {
  console.log('\nüé≠üé≠üé≠ OPENING VISUAL BROWSER - WATCH YOUR SCREEN! üé≠üé≠üé≠');
  console.log('üëÄ Browser will open MAXIMIZED');
  console.log('üëÄ It will STAY OPEN until you manually close it');
  console.log('üëÄ CHECK ALL YOUR WORKSPACES AND WINDOWS!');
  console.log('');

  const browser = await puppeteer.launch({
    headless: false,
    slowMo: 500,
    devtools: true,
    defaultViewport: null,
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--start-maximized',
      '--start-fullscreen',
      '--auto-open-devtools-for-tabs',
      '--new-window'
    ]
  });

  const page = await browser.newPage();

  console.log('‚úÖ Browser launched!');
  console.log('üåê Navigating to http://localhost:3000...');

  await page.goto('http://localhost:3000', {
    waitUntil: 'networkidle0',
    timeout: 30000
  });

  console.log('‚úÖ Dashboard loaded!');
  console.log('');
  console.log('üëÅÔ∏èüëÅÔ∏èüëÅÔ∏è  BROWSER IS NOW OPEN - LOOK AT YOUR SCREEN! üëÅÔ∏èüëÅÔ∏èüëÅÔ∏è');
  console.log('');
  console.log('üñ±Ô∏è  The browser will STAY OPEN');
  console.log('üñ±Ô∏è  Close this terminal to close the browser');
  console.log('üñ±Ô∏è  Or close the browser window manually');
  console.log('');

  // Wait forever - browser stays open until manually closed
  await new Promise(() => {});
}

openDashboard().catch(error => {
  console.error('‚ùå Error:', error);
  process.exit(1);
});
